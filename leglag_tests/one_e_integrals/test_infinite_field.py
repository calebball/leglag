"""
Tests that the external potential energy integrals are correctly evaluated for
infinite domains.
"""
import numpy as np
import pytest
from hypothesis import given, strategies as st

from leglag.one_d_domain import InfDomain
from leglag.one_e_integrals import inf_field


@pytest.mark.parametrize("side", [True, False])
@given(
    functions=st.integers(min_value=1, max_value=50),
)
def test_field_matrix_shape(side, functions):
    """Tests that the shape of the field energy integral matrix is correct."""
    domain = InfDomain(0, 0, side, 2, 1, functions, None)
    matrix = inf_field(domain)
    assert matrix.shape == (functions, functions)


unscaled_field_matrix = 0.5 * np.array(
    [
        [3, -np.sqrt(3), 0, 0, 0],
        [-np.sqrt(3), 5, -np.sqrt(8), 0, 0],
        [0, -np.sqrt(8), 7, -np.sqrt(15), 0],
        [0, 0, -np.sqrt(15), 9, -np.sqrt(24)],
        [0, 0, 0, -np.sqrt(24), 11],
    ]
)


@pytest.mark.parametrize("side", [True, False])
@given(
    alpha=st.floats(
        min_value=0, max_value=np.finfo(np.float64).max / 2, exclude_min=True
    ),
)
def test_field_matrix_values(side, alpha):
    """Tests that the field matrix is correctly generated by comparing to an
    analytically constructed example.
    """
    domain = InfDomain(0, 0, side, alpha, 1, 5, None)
    matrix = inf_field(domain)
    assert np.isclose(matrix, unscaled_field_matrix / alpha, atol=0, rtol=1e-14).all()
