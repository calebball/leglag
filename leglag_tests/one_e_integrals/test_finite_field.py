"""
Tests that the external field energy integrals are correctly evaluated for
finite domains.
"""
import numpy as np
import pytest
from hypothesis import given, strategies as st

from leglag.one_d_domain import FinDomain
from leglag.one_e_integrals import fin_field


@given(
    functions=st.integers(min_value=1, max_value=50),
)
def test_field_matrix_shape(functions):
    """Tests that the shape of the field energy integral matrix is correct."""
    domain = FinDomain(0, 0, 1, 1, functions, None)
    matrix = fin_field(domain)
    assert matrix.shape == (functions, functions)


unscaled_field_matrix = np.sqrt(
    np.array(
        [
            [0, 1 / 7, 0, 0, 0],
            [1 / 7, 0, 4 / 21, 0, 0],
            [0, 4 / 21, 0, 7 / 33, 0],
            [0, 0, 7 / 33, 0, 32 / 143],
            [0, 0, 0, 32 / 143, 0],
        ]
    )
)


@given(
    width=st.floats(
        min_value=2 * np.finfo(np.float64).tiny, max_value=np.finfo(np.float64).max / 2
    )
)
def test_field_matrix_values(width):
    """Tests that the field matrix is correctly generated by comparing to an
    analytically constructed example.
    """
    domain = FinDomain(0, 0, 2 * width, 1, 5, None)
    matrix = fin_field(domain)
    assert np.isclose(matrix, width * unscaled_field_matrix, atol=0, rtol=1e-14).all()
